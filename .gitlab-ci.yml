image: node:14.18.1-alpine

stages:
  - lint
  - test
  - build
  - deploy

variables:
  STAGING_DOCKER_IMAGE: "${CI_REGISTRY}/cc-redesign:latest_${CI_COMMIT_SHORT_SHA}"

cache:
  paths:
    - node_modules/

elint:
  stage: lint
  tags:
    - docker
  script: 
    - npm install eslint  
 
unit_test:
  stage: test
  tags:
    - docker
  script:
    - npm cache clean --force
    - npm install
    - npm run test

build:staging:
  stage: build
  tags:
    - shell
  before_script:
    - echo "$STAGING_DOCKER_IMAGE"
  script:
    - docker build --build-arg APP_ENV="dev" -t "$STAGING_DOCKER_IMAGE" .
    - docker push "$STAGING_DOCKER_IMAGE"
  only:
    - dev

deploy:staging:
  stage: deploy
  tags:
    - shell 
  script:
    - ssh -i ~/keys/id_rsa -f -o StrictHostKeyChecking=no -l admin kubetest-master.sendyit.com "kubectl set image deploy cc-redesign cc-redesign=${STAGING_DOCKER_IMAGE}"
  only:
    - dev

build:prod:
  stage: build
  tags:
    - shell
  before_script:
    - export PROD_DOCKER_IMAGE="${CI_REGISTRY}/cc-redesign:prod_$(date +%Y-%m-%d-%H-%M)"
    - echo "$PROD_DOCKER_IMAGE"
  script:
    - docker build --build-arg APP_ENV="production" -t "$PROD_DOCKER_IMAGE" .
    - docker push "$PROD_DOCKER_IMAGE"
  only:
    - master


build:preview_env:
  stage: build
  tags:
    - shell
  before_script:
    - export PREVIEW_ENV_IMAGE_NAME="sendy-docker-local.jfrog.io/cc-redesign:$(echo $CI_COMMIT_REF_NAME | awk -F "/" '{ print $2 }')_$(date +%Y-%m-%d-%H-%M)"
    - export FEATURE_ENV="$(echo $CI_COMMIT_REF_NAME | awk -F "/" '{ print $2 }')"
    - echo "$FEATURE_ENV"
  script:
    - docker build -t "${PREVIEW_ENV_IMAGE_NAME}" .
    - docker push "$PREVIEW_ENV_IMAGE_NAME"
  only:
    refs:
      - /^feature*.*$/

create-preview-env:
  stage: deploy
  tags:
    - manta
  before_script:
    - export FEATURE="$(echo $CI_COMMIT_REF_NAME | awk -F "/" '{ print $2 }')"
  script:
    - pwd
    - source ~/.bash_profile && /opt/manta -c $FEATURE -f /home/ubuntu/.kube/config
  only:
    refs:
      - /^feature*.*$/